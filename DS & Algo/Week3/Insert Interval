class Solution:
    def find(self, intervals, s):
        l = 0
        r = len(intervals)
        while(l<r):
            c = intervals[(l+r)//2][0]
            if (s == c):
                return (l+r)//2
            elif (s < c):
                r = (l+r)//2
            else:
                l = (l+r)//2+1
        return r 
    
    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:
        i1 = self.find(intervals,newInterval[0])
        i2 = self.find(intervals,newInterval[1])  
        if i1 < len(intervals) and intervals[i1][0] == newInterval[0]:
            newInterval[0] = min(newInterval[0],intervals[i1][0])
        elif i1 >= 1 and (intervals[i1-1][1] >= newInterval[0] or intervals[i1-1][1] >= newInterval[1]):
            newInterval[0] = min(newInterval[0],intervals[i1-1][0])
            newInterval[1] = max(newInterval[1],intervals[i1-1][1])
            i1-=1
        if i2 < len(intervals) and intervals[i2][0] == newInterval[1]:
            newInterval[1] = intervals[i2][1]
            i2 += 1
        elif i2 >= 1 and i2-1 < len(intervals) and intervals[i2-1][1] >= newInterval[1]:
            newInterval[1] = max(newInterval[1],intervals[i2-1][1])
        return intervals[:i1] + [newInterval] + intervals[i2:]    
